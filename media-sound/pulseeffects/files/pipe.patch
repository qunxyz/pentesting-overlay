From 71eef717367d642c0c6db4db50c7366e81ea4d7d Mon Sep 17 00:00:00 2001
From: Wellington Wallace <wellingtonwallace@gmail.com>
Date: Mon, 24 Sep 2018 12:36:35 -0300
Subject: [PATCH] alternating between the playing and the paused state

---
 CHANGELOG.md                 |  5 +++++
 src/adapter/gstpeadapter.cpp |  2 +-
 src/pipeline_base.cpp        | 31 +++++++++++++++++++------------
 3 files changed, 25 insertions(+), 13 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index cf78835d..a5f4b290 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -2,6 +2,11 @@
 
 ## [Unreleased]
 
+### Added
+- When no application is playing audio our GStreamer pipeline is put in the
+paused state instead of the null state. This should remove undesired choppy
+sounds whenever we restart the audio processing.
+
 ## [4.3.5]
 ### Added
 - More space at the right of the up/down buttons used to change effects order.
diff --git a/src/adapter/gstpeadapter.cpp b/src/adapter/gstpeadapter.cpp
index 7f64afe9..7f78d8de 100644
--- a/src/adapter/gstpeadapter.cpp
+++ b/src/adapter/gstpeadapter.cpp
@@ -288,7 +288,7 @@ static gboolean gst_peadapter_sink_event(GstPad* pad,
         case GST_EVENT_EOS:
             gst_adapter_clear(peadapter->adapter);
             break;
-        case GST_EVENT_FLUSH_STOP:
+        case GST_EVENT_FLUSH_START:
             gst_adapter_clear(peadapter->adapter);
             break;
         default:
diff --git a/src/pipeline_base.cpp b/src/pipeline_base.cpp
index 66ea8dbb..6d88891a 100644
--- a/src/pipeline_base.cpp
+++ b/src/pipeline_base.cpp
@@ -22,17 +22,18 @@ void on_message_error(const GstBus* gst_bus,
     util::critical(pb->log_tag + err->message);
     util::debug(pb->log_tag + debug);
 
-    if (err->message == std::string("Internal data stream error.")) {
-        pb->set_null_pipeline();
-
-        // As far as I know only a bad latency or buffer value causes this error
-        // in PE pipeline
-
-        g_object_set(pb->source, "buffer-time", (int)200000, nullptr);
-        g_object_set(pb->source, "latency-time", (int)10000, nullptr);
-
-        pb->update_pipeline_state();
-    }
+    // if (err->message == std::string("Internal data stream error.")) {
+    //     pb->set_null_pipeline();
+    //
+    //     // As far as I know only a bad latency or buffer value causes this
+    //     error
+    //     // in PE pipeline
+    //
+    //     g_object_set(pb->source, "buffer-time", (int)200000, nullptr);
+    //     g_object_set(pb->source, "latency-time", (int)10000, nullptr);
+    //
+    //     pb->update_pipeline_state();
+    // }
 
     g_error_free(err);
     g_free(debug);
@@ -373,7 +374,13 @@ void PipelineBase::update_pipeline_state() {
     if (!playing && wants_to_play) {
         gst_element_set_state(pipeline, GST_STATE_PLAYING);
     } else if (playing && !wants_to_play) {
-        set_null_pipeline();
+        gst_element_send_event(GST_ELEMENT(pipeline),
+                               gst_event_new_flush_start());
+
+        gst_element_set_state(pipeline, GST_STATE_PAUSED);
+
+        gst_element_send_event(GST_ELEMENT(pipeline),
+                               gst_event_new_flush_stop(true));
     }
 }
 
