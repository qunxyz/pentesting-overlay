diff -uNr uhd-release_003_010_001_000.orig/host/CMakeLists.txt uhd-release_003_010_001_000/host/CMakeLists.txt
--- uhd-release_003_010_001_000.orig/host/CMakeLists.txt	2016-11-24 07:51:50.884100000 +0800
+++ uhd-release_003_010_001_000/host/CMakeLists.txt	2016-11-24 07:55:58.064104700 +0800
@@ -440,6 +440,7 @@
 IF(ENABLE_USB)
     LIST(APPEND UHD_LINK_LIST_STATIC "usb-1.0")
 ENDIF(ENABLE_USB)
+LIST(APPEND UHD_LINK_LIST_STATIC "tinfo")
 # UHDConfig.cmake also needs UHD_RFNOC_FOUND
 IF(ENABLE_RFNOC)
     SET(UHD_RFNOC_FOUND "TRUE")
diff -uNr uhd-release_003_010_001_000.orig/host/examples/CMakeLists.txt uhd-release_003_010_001_000/host/examples/CMakeLists.txt
--- uhd-release_003_010_001_000.orig/host/examples/CMakeLists.txt	2016-11-24 07:51:50.894100000 +0800
+++ uhd-release_003_010_001_000/host/examples/CMakeLists.txt	2016-11-24 07:57:14.984105899 +0800
@@ -59,7 +59,7 @@
 IF(CURSES_FOUND)
     INCLUDE_DIRECTORIES(${CURSES_INCLUDE_DIR})
     ADD_EXECUTABLE(rx_ascii_art_dft rx_ascii_art_dft.cpp)
-    TARGET_LINK_LIBRARIES(rx_ascii_art_dft uhd ${CURSES_LIBRARIES} ${Boost_LIBRARIES})
+    TARGET_LINK_LIBRARIES(rx_ascii_art_dft uhd ${CURSES_LIBRARIES} tinfo ${Boost_LIBRARIES})
     UHD_INSTALL(TARGETS rx_ascii_art_dft RUNTIME DESTINATION ${PKG_LIB_DIR}/examples COMPONENT examples)
 ENDIF(CURSES_FOUND)
 
diff -uNr uhd-release_003_010_001_000.orig/host/utils/latency/CMakeLists.txt uhd-release_003_010_001_000/host/utils/latency/CMakeLists.txt
--- uhd-release_003_010_001_000.orig/host/utils/latency/CMakeLists.txt	2016-11-24 07:51:50.884100000 +0800
+++ uhd-release_003_010_001_000/host/utils/latency/CMakeLists.txt	2016-11-24 07:58:16.464106858 +0800
@@ -35,7 +35,7 @@
         GET_FILENAME_COMPONENT(name ${source} NAME_WE)
         ADD_EXECUTABLE(${name} ${source} ${latency_lib_path})
     	LIBUHD_APPEND_SOURCES(${name})
-        TARGET_LINK_LIBRARIES(${name} uhd ${Boost_LIBRARIES} ${CURSES_LIBRARIES})
+        TARGET_LINK_LIBRARIES(${name} uhd ${Boost_LIBRARIES} ${CURSES_LIBRARIES} tinfo)
     	UHD_INSTALL(TARGETS ${name} RUNTIME DESTINATION ${latency_comp_dest} COMPONENT ${latency_comp_name})
     ENDFOREACH(source)
 
