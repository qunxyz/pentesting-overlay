--- firegl_public.c	2016-03-24 19:04:51.360566433 +0800
+++ firegl_public.gpl.c	2016-03-24 19:10:43.980571678 +0800
@@ -136,7 +136,6 @@
 #include <asm/mman.h>
 #include <asm/uaccess.h>
 #include <asm/processor.h>
-#include <asm/tlbflush.h> // for flush_tlb_page
 #include <asm/cpufeature.h>
 #ifdef CONFIG_MTRR
 #include <asm/mtrr.h>
@@ -250,6 +249,25 @@
 #define READ_CR4()      read_cr4()
 #define WRITE_CR4(x)    write_cr4(x)
 #endif
+#define __flush_tlb_one(addr) asm volatile("invlpg (%0)" ::"r" (addr) : "memory")
+#define __flush_tlb() native_write_cr3(native_read_cr3())
+
+static inline void __flush_tlb_all(void)
+{
+        if (cpu_has_pge)
+        {
+                unsigned long flags, cr4;
+                raw_local_irq_save(flags);
+                cr4 = native_read_cr4();
+                native_write_cr4(cr4 & ~X86_CR4_PGE);
+                native_write_cr4(cr4);
+                raw_local_irq_restore(flags);
+        }
+        else
+        {
+                __flush_tlb();
+        }
+}
 
 // ============================================================
 /* globals */
@@ -6479,7 +6497,12 @@
 void ATI_API_CALL KCL_fpu_begin(void)
 {
 #ifdef CONFIG_X86_64
-    kernel_fpu_begin();
+    #if LINUX_VERSION_CODE >= KERNEL_VERSION(4,2,0)
+        preempt_disable();
+        __kernel_fpu_begin();
+    #else
+        kernel_fpu_begin();
+    #endif
 #else
 #ifdef TS_USEDFPU
     struct thread_info *cur_thread = current_thread_info();
@@ -6525,7 +6548,12 @@
  */
 void ATI_API_CALL KCL_fpu_end(void)
 {
-    kernel_fpu_end();
+    #if LINUX_VERSION_CODE >= KERNEL_VERSION(4,2,0)
+        __kernel_fpu_end();
+        preempt_enable();
+    #else
+        kernel_fpu_end();
+    #endif
 }
 
 /** Create new directory entry under "/proc/...."
